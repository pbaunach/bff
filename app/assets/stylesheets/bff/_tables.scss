//Tables


.#{$css-prefix}table {
  background-color: $table-background--color;

  // Cells
  th,
  td {
    padding: $spacing--x-small;
    white-space: nowrap;
    position: relative;
  }

  // Table Heading Cells
  th {
  	background-color:$table-header-background--color;
  	color: $table-header--color;
    font-weight: $font-weight--light
  }

  // Default Table Row Hover
  &:not(.#{$css-prefix}no-row-hover) tbody tr:hover {
    > td,
    > th {
      background-color: $table-row-background--hover;
    }
  }

  // Selected Table Row + Hover
  tbody tr.#{$css-prefix}is-selected,
  &:not(.#{$css-prefix}no-row-hover) tr.#{$css-prefix}is-selected:hover {

    > td,
    > th {
      background-color: $table-row-background--active;
    }
  }

  // Selected Cell
  td.#{$css-prefix}is-selected,
  td.#{$css-prefix}is-selected:hover,
  th.#{$css-prefix}is-selected,
  th.#{$css-prefix}is-selected:hover {
    box-shadow: $table-cell-border--selection 0 0 0 $border-width inset;
  }

  // Deal with truncation
  .#{$css-prefix}truncate {
    max-width: $table-cell--max-width
  }

  // By default, nowrap is applied
  .#{$css-prefix}cell-wrap {
    white-space: normal;
  }

  // Reduce cell to the width of its content, if space is available
  .#{$css-prefix}cell-shrink {
    width: 1%;
  }

  // Use to add a left padding buffer to cells, @todo will need to reset for responsive
  .#{$css-prefix}cell-buffer--left {
    padding-left: $spacing--large;
  }

  .#{$css-prefix}cell-buffer--right {
    padding-right: $spacing--large;
  }
}

// Add left and right padding to the first and last cells of a table
.#{$css-prefix}table--cell-buffer {

  tr > th:first-child,
  tr > td:first-child {
    padding-left: $spacing--large;
  }

  tr > th:last-child,
  tr > td:last-child {
    padding-right: $spacing--large;
  }
}

// Add vertical borders to a table
.#{$css-prefix}table--bordered {
  border: {
    top: $border-width solid $table-border--color;
    bottom: $border-width solid $table-border--color;
  }

  // More than one row in thead
  thead > tr + tr > th {
    border-top: $border-width solid $table-border--color;
  }

  // Cells
  td,
  th {
    border-top: $border-width solid $table-border--color;
  }

  // Default Table Row Hover
  //
  // Checks if .no-row-hover is applied to parent table
  // Applies hovers to only <th> and <td> within <tbody>
  // Also checks that the <th> and <td> do not have the class .is-selected
  // This retains the selected state when a row is hovered
  //
  // Box shadow used to eliminate jumpiness on hover
  &:not(.#{$css-prefix}no-row-hover) tbody tr:hover > td:not(.#{$css-prefix}is-selected),
  &:not(.#{$css-prefix}no-row-hover) tbody tr:hover > th:not(.#{$css-prefix}is-selected) {
    box-shadow: $table-border--color 0 ($border-width * -1) 0 inset,
                $table-border--color 0 ($border-width) 0 inset;
  }
}

// Add alternating strips to rows
.#{$css-prefix}table--striped {
  // scss-lint:disable SelectorDepth
  tbody tr:nth-of-type(even) > td,
  tbody tr:nth-of-type(even) > th {
    background-color: $table-row-background--alt;
  }
}



// Actionable area inside th
.#{$css-prefix}th__action {
  display: flex;
  padding: $spacing--x-small;

  &:focus,
  &:hover {
    outline: 0;
    background-color: $table-row-background--hover;

    .#{$css-prefix}is-sortable__icon {
      display: inline-block;
    }
  }
}

// Icon inside sortable th
.#{$css-prefix}is-sortable__icon {
//  @include square($square-icon-small-content);
  margin-left: $spacing--xx-small;
  display: none;
}

// Active state of sorted column
.#{$css-prefix}is-sorted {

  .#{$css-prefix}is-sortable__icon {
    display: inline-block;
  }

  // Change direction of arrow
  &--asc .#{$css-prefix}is-sortable__icon {
    transform: rotate(180deg);
  }
}







