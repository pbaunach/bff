// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

.#{$css-prefix}grid {
  @include make-container();
  @include make-container--max-widths();
}

// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

.#{$css-prefix}grid--fluid {
  @include make-container();
}

// Row
.#{$css-prefix}row {
  @include make-row();
}

// Columns
//
// Common styles for small and large grid columns

 @include make-grid__columns();

// Flex variation
//
// Custom styles for additional flex alignment options.

// Flex column reordering

@each $breakpoint in map-keys($grid__breakpoints) {
  @include media__breakpoint--up($breakpoint) {
    .#{$css-prefix}col--#{$breakpoint}-first { order: -1; }
    .#{$css-prefix}col--#{$breakpoint}-last  { order: 1; }
  }
}

//TODO: Apply this to a proper mixin

.#{$css-prefix}col--x-small {
  flex-grow:1;
  flex-shrink:1;
  flex-basis: auto;
  padding-left:  ($grid__gutter--width / 2);
  padding-right: ($grid__gutter--width / 2);
}
@media (min-width: 544px) {
  .#{$css-prefix}col--small {
    flex-grow:1;
    flex-shrink:1;
    flex-basis: auto;
    padding-left:  ($grid__gutter--width / 2);
    padding-right: ($grid__gutter--width / 2);
  }
}
@media (min-width: 768px) {
  .#{$css-prefix}col--medium {
    flex-grow:1;
    flex-shrink:1;
    flex-basis: auto;
    padding-left:  ($grid__gutter--width / 2);
    padding-right: ($grid__gutter--width / 2);
  }
}
@media (min-width: 992px) {
  .#{$css-prefix}col--large {
    flex-grow:1;
    flex-shrink:1;
    flex-basis: auto;
    padding-left:  ($grid__gutter--width / 2);
    padding-right: ($grid__gutter--width / 2);
  }
}
@media (min-width: 1200px) {
  .#{$css-prefix}col--x-large {
    flex-grow:1;
    flex-shrink:1;
    flex-basis: auto;
    padding-left:  ($grid__gutter--width / 2);
    padding-right: ($grid__gutter--width / 2);
  }
}


// Alignment for every column in row

@each $breakpoint in map-keys($grid__breakpoints) {
  @include media__breakpoint--up($breakpoint) {
    .#{$css-prefix}row--#{$breakpoint}-top    { align-items: flex-start; }
    .#{$css-prefix}row--#{$breakpoint}-center { align-items: center; }
    .#{$css-prefix}row--#{$breakpoint}-bottom { align-items: flex-end; }
  }
}

// Alignment per column

@each $breakpoint in map-keys($grid__breakpoints) {
  @include media__breakpoint--up($breakpoint) {
    .#{$css-prefix}col--#{$breakpoint}-top    { align-self: flex-start; }
    .#{$css-prefix}col--#{$breakpoint}-center { align-self: center; }
    .#{$css-prefix}col--#{$breakpoint}-bottom { align-self: flex-end; }
  }
}

