/// Grid system
//
// Generate semantic grid columns with these mixins.

@mixin make-container($gutter: $grid__gutter--width) {
  margin-left: auto;
  margin-right: auto;
  padding-left:  ($gutter / 2);
  padding-right: ($gutter / 2);
}


// For each breakpoint, define the maximum width of the container in a media query
@mixin make-container--max-widths($max-widths: $container--max-widths) {
  @each $breakpoint, $container--max-width in $max-widths {
    @include media__breakpoint--up($breakpoint) {
      max-width: $container--max-width;
    }
  }
}

@mixin make-row($gutter: $grid__gutter--width) {
  display: flex;
  flex-wrap: wrap;
  margin-left:  ($gutter / -2);
  margin-right: ($gutter / -2);
}

@mixin make-col($gutter: $grid__gutter--width) {
  position: relative;
  min-height: 1px;
  padding-left:  ($gutter / 2);
  padding-right: ($gutter / 2);
}

@mixin make-col--span($size, $columns: $grid__columns) {
    flex: 0 0 percentage($size / $columns);
}

@mixin make-col--offset($size, $columns: $grid__columns) {
  margin-left: percentage($size / $columns);
}

@mixin make-col--push($size, $columns: $grid__columns) {
  left: if($size > 0, percentage($size / $columns), auto);
}

@mixin make-col--pull($size, $columns: $grid__columns) {
  right: if($size > 0, percentage($size / $columns), auto);
}

@mixin make-col--modifier($type, $size, $columns) {
  // Work around the lack of dynamic mixin @include support (https://github.com/sass/sass/issues/626)
  @if $type == push {
    @include make-col--push($size, $columns);
  } @else if $type == pull {
    @include make-col--pull($size, $columns);
  } @else if $type == offset {
    @include make-col--offset($size, $columns);
  }
}
